{"version":3,"sources":["UserContext.js","New.js","clickCounter.js","hoverCounter.js","withCounter.js","ErrorBoundary.js","App.js","index.js"],"names":["UserContext","React","createContext","displayName","New","Consumer","value","ClickCounter","useState","counter","setCounter","Error","onClick","prev","type","defaultValue","withCounter","WrappedComponent","NewComponent","changeState","onMouseEnter","ErrorBoundary","props","state","hasError","error","errorInfo","this","setState","console","log","children","Component","App","name","setName","className","onChange","e","target","Provider","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0KAEMA,EAAcC,IAAMC,cAAc,QACxCF,EAAYG,YAAc,cAEXH,Q,OCWAI,EAbH,WACR,OACI,cAAC,EAAYC,SAAb,UACK,SAAAC,GAAK,OACM,sCAECA,SCYVC,G,MAlBM,WAClB,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAKA,GAAe,IAAZD,EACF,MAAM,IAAIE,MAAM,aAGhB,OACI,gCACI,yBAAQC,QAVG,WAChBF,GAAW,SAAAG,GAAI,OAAIA,EAAK,MASnB,mBAAqCJ,KACrC,uBAAOK,KAAK,OAAOC,aAAa,eCL7BC,ECRK,SAACC,GACjB,OAAO,SAASC,IACZA,EAAaf,YAAc,cAC3B,MAA8BK,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACI,cAACO,EAAD,CAAkBR,QAASA,EAASU,YAFpB,kBAAMT,GAAW,SAAAG,GAAI,OAAIA,EAAK,SDI3CG,EARM,SAAC,GAA4B,IAA3BP,EAA0B,EAA1BA,QAASU,EAAiB,EAAjBA,YAC5B,OACI,8BACI,yBAAQC,aAAcD,EAAtB,mBAA0CV,U,4BEoBvCY,E,kDAtBX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,E,qDAMnB,SAAkBC,EAAOC,GAEvBC,KAAKC,SAAS,CAACJ,UAAU,IACzBK,QAAQC,IAAIJ,K,oBAGd,WACE,OAAIC,KAAKJ,MAAMC,SAEN,iIAGFG,KAAKL,MAAMS,a,GAnBI9B,IAAM+B,WCKnB,SAASC,IACtB,MAAwBzB,mBAAS,IAAjC,mBAAO0B,EAAP,KAAaC,EAAb,KACA,OACE,sBAAKC,UAAU,OAAf,0EAEE,uBAAO9B,MAAO4B,EAAMG,SAAU,SAACC,GAAD,OAAOH,EAAQG,EAAEC,OAAOjC,UACtD,cAAC,EAAYkC,SAAb,CAAsBlC,MAAO4B,EAA7B,SACA,cAAC,EAAD,MAEA,eAAC,EAAD,WACA,cAAC,EAAD,IACA,cAAC,EAAD,UCdN,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,WAAD,UACE,cAACZ,EAAD,MAEFQ,K","file":"static/js/main.4f1ab385.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst UserContext = React.createContext('user');\r\nUserContext.displayName = 'userContext';\r\n\r\nexport default UserContext;","import { useContext } from 'react';\r\nimport UserContext from './UserContext';\r\n\r\nconst New = () => {\r\n    return (\r\n        <UserContext.Consumer>\r\n            {value => (\r\n                        <div>\r\n                        NEW \r\n                        {value}\r\n                    </div>\r\n            )}\r\n        </UserContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default New;","import React from 'react';\r\nimport { useState } from \"react\";\r\n\r\nconst ClickCounter = () => {\r\n   const [counter, setCounter] = useState(0);\r\n   const changeState = () => {\r\n       setCounter(prev => prev+1);\r\n   }\r\n\r\n   if(counter === 5){\r\n    throw new Error('error bad');\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={changeState}>CLICK {counter}</button>\r\n            <input type='text' defaultValue='input' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClickCounter;","import React from 'react';\r\nimport withCounter from './withCounter';\r\n\r\nconst HoverCounter = ({counter, changeState}) => {\r\n    return (\r\n        <div>\r\n            <button onMouseEnter={changeState}>HOVER {counter}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withCounter(HoverCounter);","import React from 'react';\r\nimport { useState } from \"react\";\r\n\r\nconst withCounter = (WrappedComponent) => {\r\n    return function NewComponent() {\r\n        NewComponent.displayName = 'withCounter';\r\n        const [counter, setCounter] = useState(0);\r\n        const changeState = () => setCounter(prev => prev+1);\r\n        return (\r\n            <WrappedComponent counter={counter} changeState={changeState} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCounter;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n      this.setState({hasError: true});\r\n      console.log(errorInfo);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // Можно отрендерить запасной UI произвольного вида\r\n        return <h1>Что-то пошло не так.</h1>;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\nexport default ErrorBoundary;","import React, { useState } from 'react';\nimport New from \"./New\";\nimport UserContext from './UserContext';\nimport \"./styles.css\";\nimport ClickCounter from './clickCounter';\nimport HoverCounter from './hoverCounter';\nimport ErrorBoundary from './ErrorBoundary';\n\nexport default function App() {\n  const [name, setName] = useState('');\n  return (\n    <div className=\"page\">\n      Введите имя\n      <input value={name} onChange={(e) => setName(e.target.value)} />\n      <UserContext.Provider value={name}>\n      <New />\n      </UserContext.Provider>\n      <ErrorBoundary>\n      <ClickCounter />\n      <HoverCounter />\n      </ErrorBoundary>\n    </div>\n  );\n}\n","import { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Fragment>\n    <App />\n  </Fragment>,\n  rootElement\n);\n"],"sourceRoot":""}